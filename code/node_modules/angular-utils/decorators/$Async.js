'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _angular = require('angular');

var _angular2 = _interopRequireDefault(_angular);

var _injectHelper = require('../utils/injectHelper');

var _injectHelper2 = _interopRequireDefault(_injectHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var $Async = function $Async(target, key, descriptor) {

	var fn = descriptor.value;

	if (!_angular2.default.isFunction(fn)) {
		throw new SyntaxError('Only functions can be @$Async');
	}

	return _extends({}, descriptor, {
		value: function value() {
			for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
				args[_key] = arguments[_key];
			}

			var result = fn.apply(this, args);
			_injectHelper2.default.injector.invoke(['$rootScope', '$q', function ($rootScope, $q) {
				$q.when(result).then(function () {
					return $rootScope.$applyAsync();
				});
			}]);
		}
	});
};

exports.default = $Async;