'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var InterceptorFactory = function () {
	function InterceptorFactory() {
		_classCallCheck(this, InterceptorFactory);

		this.filters = [];
	}

	_createClass(InterceptorFactory, [{
		key: 'push',
		value: function push(fn) {
			this.filters.push(fn);
			return this;
		}
	}, {
		key: 'getInterceptor',
		value: function getInterceptor() {
			var _this = this;

			return {
				'response': function response(_response) {
					return _this.filters.reduce(function (value, fn) {
						return fn(value);
					}, _response);
				}
			};
		}
	}]);

	return InterceptorFactory;
}();

/**
 import injector from 'angular-es-utils/injector';
 const $log = injector.get('$log');

 export default function dataFilter(response) {
	$log.info('data:', response);
	return response;
 }

 import data from './dataFilter';
 import message from './messageFilter';

 const factory = new InterceptorFactory();
 export default factory.push(data).push(message).getInterceptor();
 * */


exports.default = InterceptorFactory;